var app;

app = angular.module("WEBYI", ["ngSanitize", "ui.router", "ngMessages"]).config(function($locationProvider, $urlRouterProvider) {
  return $urlRouterProvider.otherwise("/site/index");
}).run(function($rootScope, $state, CoAuth, WindowInfo) {
  $rootScope.$state = $state;
  $rootScope.CoAuth = CoAuth;
  return $rootScope.WindowInfo = WindowInfo;
});

app.controller('SchemaFormCtrl', function($scope, SchemaModel, $state, SocketConnect) {
  $scope.schema = new SchemaModel();
  $scope.field_types = SchemaModel.field_types;
  $scope.schemas = [];
  $scope.addField = function() {
    $scope.schema.addField();
    return console.log($scope.schema, $scope.schema.get('fields'));
  };
  $scope.delField = function(index) {
    return $scope.schema.fields.splice(index, 1);
  };
  $scope.addEnum = function(field) {
    return field.enums.push({
      value: ''
    });
  };
  $scope.delEnum = function(field, index) {
    return field.enums.splice(index, 1);
  };
  return $scope.save = function() {
    return SchemaModel.save($scope.schema).then(function(res) {
      $state.go('schema.update', {
        _id: res._id
      });
      return res;
    }).then(function(doc) {
      return socket.emit('RunSchameTest', doc);
    }).fail(function(err) {
      return console.log(err);
    }).done();
  };
});

app.controller('SiteIndexCtrl', function($scope, SocketConnect, $element, WindowInfo) {
  $scope.joinAppAndStart = function() {
    return SocketConnect.emit('joinAppAndStart', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/');
  };
  SocketConnect.on("runingAppList", function(data) {
    return $scope.$apply(function() {
      return $scope.running_list = data;
    });
  });
  SocketConnect.on("testList", function(data) {
    return $scope.$apply(function() {
      return $scope.test_list = data;
    });
  });
  $scope.createSchemas = function() {
    return SocketConnect.emit('createSchemas', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/');
  };
  $scope.createModels = function() {
    return SocketConnect.emit('createModels', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/');
  };
  $scope.createRouters = function() {
    return SocketConnect.emit('createRouters', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/');
  };
  $scope.createModelTests = function() {
    return SocketConnect.emit('createModelTests', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/');
  };
  return $scope.runTest = function(params) {
    return SocketConnect.emit('runTest', 'D:/coleeFlie/htdocs/Co-sumaitong/src/trunk5/', params);
  };
});


/*
控制台面板
 */
app.directive('consolePanel', function(SocketConnect, FormatJsonView) {
  return {
    restrict: "AE",
    replace: true,
    template: '<div></div>',
    scope: true,
    link: function(scope, element, attrs, ctrl) {
      var addData, row_number;
      $(element).css({
        height: '100%',
        overflow: 'auto',
        background: '#101010',
        float: 'left',
        width: '55%'
      });
      row_number = 0;
      addData = function(data) {
        var log, pre;
        if (typeof data === "object") {
          data = FormatJsonView(data);
        } else {
          if (typeof data === "string") {
            data = ansi2html($('<div/>').text(data).html());
          }
        }
        log = void 0;
        row_number++;
        if ($(element).find(".log-line").length < 200) {
          log = $(document.createElement("div")).addClass("log-line").css({
            position: "relative"
          });
        } else {
          log = $(element).find(".log-line:first").html("");
        }
        log.appendTo(element);
        pre = $("<pre></pre>").css({
          paddingLeft: 55,
          fontSize: 14
        }).html(data).appendTo(log);
        $("<p>" + row_number + "</p>").css({
          position: "absolute",
          margin: 0,
          textAlign: "right",
          paddingRight: 5,
          left: 0,
          width: 50,
          top: 0,
          bottom: 0,
          background: "#292929"
        }).prependTo(log);
        return $(element).scrollTop($(element)[0].scrollHeight);
      };
      SocketConnect.on('console', addData);
      return scope.$on('$destroy', function() {
        return SocketConnect.removeEventListener('console', addData);
      });
    }
  };
});

app.directive("onCtrlS", function() {
  return {
    priority: 100,
    restrict: "AE",
    scope: {
      onCtrlS: "&"
    },
    link: function(scope, element, attrs) {
      $(element).bind('keydown', function(e) {
        if (e.ctrlKey && e.keyCode === 83) {
          scope.$apply(function() {
            return scope.onCtrlS();
          });
          return e.preventDefault();
        }
      });
      return scope.$on('$destroy', function() {
        return $(element).unbind('keydown');
      });
    }
  };
});

app.factory('SchemaModel', function() {
  return Backbone.Model.extend({
    defaults: {
      fields: [],
      modelName: 'qq',
      tableName: 'qq'
    },
    addField: function() {
      var fields;
      fields = this.get('fields');
      fields.push({});
      this.set('fields', fields);
      return this;
    }
  });
});

app.config(function($stateProvider, $urlRouterProvider) {
  return $stateProvider.state("schema", {
    url: "/schema",
    views: {
      container: {
        templateUrl: "templates/schemas/layout.html"
      }
    }
  }).state("schema.index", {
    url: "/index",
    views: {
      container: {
        templateUrl: "templates/schemas/schema-form.html"
      }
    }
  });
});

app.config(function($stateProvider, $urlRouterProvider) {
  return $stateProvider.state("site", {
    url: "/site",
    views: {
      container: {
        templateUrl: "templates/site/layout.html"
      }
    }
  }).state("site.index", {
    url: "/index",
    views: {
      container: {
        templateUrl: "templates/site/index.html"
      }
    }
  });
});

app.factory('CoAuth', function() {
  return this;
});


/*
JSON格式化与缩进显示
 */
app.factory('FormatJsonView', function() {
  var formatJson;
  return formatJson = function(json, options) {
    var PADDING, formatted, pad, reg;
    reg = null;
    formatted = "";
    pad = 0;
    PADDING = "    ";
    options = options || {};
    options.newlineAfterColonIfBeforeBraceOrBracket = (options.newlineAfterColonIfBeforeBraceOrBracket === true ? true : false);
    options.spaceAfterColon = (options.spaceAfterColon === false ? false : true);
    if (typeof json !== "string") {
      json = JSON.stringify(json);
    } else {
      json = JSON.parse(json);
      json = JSON.stringify(json);
    }
    reg = /([\{\}])/g;
    json = json.replace(reg, "\r\n$1\r\n");
    reg = /([\[\]])/g;
    json = json.replace(reg, "\r\n$1\r\n");
    reg = /(\,)/g;
    json = json.replace(reg, "$1\r\n");
    reg = /(\r\n\r\n)/g;
    json = json.replace(reg, "\r\n");
    reg = /\r\n\,/g;
    json = json.replace(reg, ",");
    if (!options.newlineAfterColonIfBeforeBraceOrBracket) {
      reg = /\:\r\n\{/g;
      json = json.replace(reg, ":{");
      reg = /\:\r\n\[/g;
      json = json.replace(reg, ":[");
    }
    if (options.spaceAfterColon) {
      reg = /\:/g;
      json = json.replace(reg, ": ");
    }
    $.each(json.split("\r\n"), function(index, node) {
      var i, indent, padding;
      i = 0;
      indent = 0;
      padding = "";
      if (node.match(/\{$/) || node.match(/\[$/)) {
        indent = 1;
      } else if (node.match(/\}/) || node.match(/\]/)) {
        if (pad !== 0) {
          pad -= 1;
        }
      } else {
        indent = 0;
      }
      i = 0;
      while (i < pad) {
        padding += PADDING;
        i++;
      }
      formatted += padding + node + "\r\n";
      return pad += indent;
    });
    return formatted;
  };
});

app.factory('SocketConnect', function() {
  var socket;
  socket = io.connect("http://127.0.0.1:1000/");
  socket.on("error", function(err) {
    return console.log("err", err, err.stack);
  });
  socket.on("console", function(data) {});
  return socket;
});

app.factory('WindowInfo', function($rootScope) {
  var ths;
  ths = this;
  ths.height = $(window).height();
  ths.width = $(window).width();
  $(window).resize(function() {
    return $rootScope.$apply(function() {
      ths.height = $(this).height();
      return ths.width = $(this).width();
    });
  });
  return ths;
});

//# sourceMappingURL=app.min.js.map